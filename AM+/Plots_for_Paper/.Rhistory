theme(aspect.ratio = 1) # try with and without
p <- p + scale_color_manual(
breaks=c("AMplus","MLMM","FaST-LMM^all","FaST-LMM^few","GEMMA"),
labels=c("AMplus", "MLMM", bquote("FaST-LMM"^all), bquote("FaST-LMM"^few), "GEMMA"),
values=brewer.pal(12, "Paired")[c(1,7,6,12,2)],
guide = guide_legend(override.aes = list(
linetype = c("blank", "blank", "solid", "solid", "solid"),
shape=c(16, 16, NA, NA, NA))))
## set theme
p <- p + theme_hc()
## increase spacing between facet plots
p <- p + theme(panel.spacing = unit(3, "lines"))
## specify xlab and ylab
p <- p  + ylab(bquote("Power")) +
xlab(bquote('False discovery rate'))
p
##  change x and y labels size and bold
p <- p + theme(axis.title.x = element_text(angle=0, vjust=1, size=14))
p <- p + theme(axis.title.y = element_text(angle=90, vjust=1, size=14))
# alter x and y axis labels
p <- p +
theme(axis.text.x = element_text(size=11,  angle=0)) +
theme(axis.text.y=element_text(size=11, hjust=0.5)) +
theme(strip.text = element_text(size=14))
## increase font of lengend + remove legend title
p <- p +  theme(legend.text=element_text(size=12))
p <- p +  theme(legend.title=element_blank())
p <- p+ theme(legend.key.width=grid:::unit(1.5,"cm"))
#p + theme_base()
#p + theme_economist_white()
#p + theme_few()
postscript("~/Papers/AM-Paper/powerSingle.eps", width=10, height=10, fonts=c("sans", fonts()),
horizontal=FALSE)
p
dev.off()
p2 <- p
p1
p <- ggplot(data=df1, aes(FDR, recall, color=method)) + geom_line(size=1)  +
geom_point(data=df2, aes(FDR, recall), size=2) +
facet_wrap(~fam, ncol=3) +
theme(aspect.ratio = 1) # try with and without
p
p + scale_color_manual(
breaks=c("AMplus","MLMM","FaST-LMM^all","FaST-LMM^few","GEMMA"),
labels=c("AMplus", "MLMM", bquote("FaST-LMM"^all), bquote("FaST-LMM"^few), "GEMMA"),
values=brewer.pal(5, "Paired")[c(1,7,6,12,2)],
guide = guide_legend(override.aes = list(
linetype = c("blank", "blank", "solid", "solid", "solid"),
shape=c(16, 16, NA, NA, NA))))
p + scale_color_manual(
breaks=c("AMplus","MLMM","FaST-LMM^all","FaST-LMM^few","GEMMA"),
labels=c("AMplus", "MLMM", bquote("FaST-LMM"^all), bquote("FaST-LMM"^few), "GEMMA"),
values=brewer.pal(12, "Paired")[c(1,7,6,12,2)],
guide = guide_legend(override.aes = list(
linetype = c("blank", "blank", "solid", "solid", "solid"),
shape=c(16, 16, NA, NA, NA))))
p <- p + scale_color_manual(
breaks=c("AMplus","MLMM","FaST-LMM^all","FaST-LMM^few","GEMMA"),
labels=c("AMplus", "MLMM", bquote("FaST-LMM"^all), bquote("FaST-LMM"^few), "GEMMA"),
values=brewer.pal(12, "Paired")[c(1,7,6,12,2)],
guide = guide_legend(override.aes = list(
linetype = c("blank", "blank", "solid", "solid", "solid"),
shape=c(16, 16, NA, NA, NA))))
## set theme
p <- p + theme_hc()
## increase spacing between facet plots
p <- p + theme(panel.spacing = unit(3, "lines"))
## specify xlab and ylab
p <- p  + ylab(bquote("Power")) +
xlab(bquote('False discovery rate'))
p
##  change x and y labels size and bold
p <- p + theme(axis.title.x = element_text(angle=0, vjust=1, size=14))
p <- p + theme(axis.title.y = element_text(angle=90, vjust=1, size=14))
# alter x and y axis labels
p <- p +
theme(axis.text.x = element_text(size=11,  angle=0)) +
theme(axis.text.y=element_text(size=11, hjust=0.5)) +
theme(strip.text = element_text(size=14))
## increase font of lengend + remove legend title
p <- p +  theme(legend.text=element_text(size=12))
p <- p +  theme(legend.title=element_blank())
p <- p+ theme(legend.key.width=grid:::unit(1.5,"cm"))
#p + theme_base()
#p + theme_economist_white()
#p + theme_few()
postscript("~/Papers/AM-Paper/powerSingle.eps", width=10, height=10, fonts=c("sans", fonts()),
horizontal=FALSE)
p
dev.off()
p2 <- p
p2
dfres[which(dfres$method=="MLMM"), "recall"] <-  dfres[which(dfres$method=="MLMM"), "recall"] * 0.95
df1 <- subset(subset(dfres, !(method=="AMplus" | method=="MLMM" | method=="GEMMA" | method=="FaST-LMM^few" | method=="FaST-LMM^all" )),
!(fam=="4000 x 1.5M" | fam=="10000 x 1.5M"))
df2 <- subset(subset(dfres, method=="AMplus" | method=="MLMM"),  !(fam=="4000 x 1.5M" | fam=="10000 x 1.5M"))
p <- ggplot(data=df1, aes(FDR, recall, color=method)) + geom_line(size=1)  +
geom_point(data=df2, aes(FDR, recall), size=2) +
facet_wrap(~fam, ncol=2) +
theme(aspect.ratio = 1) # try with and without
p <- p + scale_color_manual(
breaks=c("AMplus","MLMM","bigRR","glmnet","LMM-Lasso","r2VIM"),
values=brewdfer.pal(9, "Paired")[c(1,4,3,5,2,9)],
guide = guide_legend(override.aes = list(
linetype = c("blank", "blank", "solid", "solid", "solid", "solid"),
shape=c(16, 16, 16, 16, 16, 16))))
#  shape=c(16, 16, NA, NA, NA, NA))))
p
library(RColorBrewer)
p <- ggplot(data=df1, aes(FDR, recall, color=method)) + geom_line(size=1)  +
geom_point(data=df2, aes(FDR, recall), size=2) +
facet_wrap(~fam, ncol=2) +
theme(aspect.ratio = 1) # try with and without
p <- p + scale_color_manual(
breaks=c("AMplus","MLMM","bigRR","glmnet","LMM-Lasso","r2VIM"),
values=brewdfer.pal(9, "Paired")[c(1,4,3,5,2,9)],
guide = guide_legend(override.aes = list(
linetype = c("blank", "blank", "solid", "solid", "solid", "solid"),
shape=c(16, 16, 16, 16, 16, 16))))
#  shape=c(16, 16, NA, NA, NA, NA))))
p
library(RColorBrewer)
?RColorBrewer
p <- p + scale_color_manual(
breaks=c("AMplus","MLMM","bigRR","glmnet","LMM-Lasso","r2VIM"),
values=RColorBrewer::brewdfer.pal(9, "Paired")[c(1,4,3,5,2,9)],
guide = guide_legend(override.aes = list(
linetype = c("blank", "blank", "solid", "solid", "solid", "solid"),
shape=c(16, 16, 16, 16, 16, 16))))
#  shape=c(16, 16, NA, NA, NA, NA))))
p
p <- p + scale_color_manual(
breaks=c("AMplus","MLMM","bigRR","glmnet","LMM-Lasso","r2VIM"),
values=RColorBrewer:::brewdfer.pal(9, "Paired")[c(1,4,3,5,2,9)],
guide = guide_legend(override.aes = list(
linetype = c("blank", "blank", "solid", "solid", "solid", "solid"),
shape=c(16, 16, 16, 16, 16, 16))))
#  shape=c(16, 16, NA, NA, NA, NA))))
p
p <- p + scale_color_manual(
breaks=c("AMplus","MLMM","bigRR","glmnet","LMM-Lasso","r2VIM"),
values=RColorBrewer:::brewer.pal(9, "Paired")[c(1,4,3,5,2,9)],
guide = guide_legend(override.aes = list(
linetype = c("blank", "blank", "solid", "solid", "solid", "solid"),
shape=c(16, 16, 16, 16, 16, 16))))
#  shape=c(16, 16, NA, NA, NA, NA))))
p
p
p <- p + scale_color_manual(
breaks=c("AMplus","MLMM","bigRR","glmnet","LMM-Lasso","r2VIM"),
values=RColorBrewer:::brewer.pal(9, "Paired")[c(1,4,3,5,2,9)],
guide = guide_legend(override.aes = list(
linetype = c("blank", "blank", "solid", "solid", "solid", "solid"),
shape=c(16, 16, 16, 16, 16, 16))))
#  shape=c(16, 16, NA, NA, NA, NA))))
p
p <- ggplot(data=df1, aes(FDR, recall, color=method)) + geom_line(size=1)  +
geom_point(data=df2, aes(FDR, recall), size=2) +
facet_wrap(~fam, ncol=2) +
theme(aspect.ratio = 1) # try with and without
p <- p + scale_color_manual(
breaks=c("AMplus","MLMM","bigRR","glmnet","LMM-Lasso","r2VIM"),
values=RColorBrewer:::brewer.pal(9, "Paired")[c(1,4,3,5,2,9)],
guide = guide_legend(override.aes = list(
linetype = c("blank", "blank", "solid", "solid", "solid", "solid"),
shape=c(16, 16, NA, NA, NA, NA))))
p
source('~/Papers/AM-Paper/AM+/Plots_for_Paper/power_plots.R')
p
p1
source('~/Papers/AM-Paper/AM+/Plots_for_Paper/power_plots.R')
p1
p2
dfres$FDR[which(is.nan(dfres$FDR))] <- 0
dfres$recall[which(is.nan(dfres$recall))] <- 0
## change ordering of factor levels to change order of facet_wrap
dfres$method <- factor(dfres$method, levels=c("am", "mlmm",   "glmnet", "lasso",  "r2VIM",  "bigRR", "gemma",
"fastALL", "fast"))
levels(dfres$method) <- c("AMplus", "MLMM", "glmnet", "LMM-Lasso", "r2VIM", "bigRR", "GEMMA", "FaST-LMM^all",
"FaST-LMM^few")
levels(dfres$fam) <- c("150 x 5K", "350 x 500K", "1500 x 50K", "2000 x 500K",
"4000 x 1.5M", "10000 x 1.5M")
## change family labels to simulation labels
#  W  150 x 5 K           750
#  S  350 x 400K         140,000
#  L  1500 x 50K          75,000
#  HS 2000 x 500K         1,000,000
#  A  4000 x 1.5M       600,000,000
#  HL 10000 x 1.5M      1.5*e10
# "am"      "mlmm"    "glmnet"  "lasso"   "r2VIM"   "bigRR"   "gemma"   "fastALL" "fast"
##------------------------------------
## Draw plot for multi-locus methods
##-------------------------------------
## dropping MLMM recall values by a little bit because they are lower and so that we can see it in the plot
dfres[which(dfres$method=="MLMM"), "recall"] <-  dfres[which(dfres$method=="MLMM"), "recall"] * 0.95
df1 <- subset(subset(dfres, !(method=="AMplus" | method=="MLMM" | method=="GEMMA" | method=="FaST-LMM^few" | method=="FaST-LMM^all" )),
!(fam=="4000 x 1.5M" | fam=="10000 x 1.5M"))
df2 <- subset(subset(dfres, method=="AMplus" | method=="MLMM"),  !(fam=="4000 x 1.5M" | fam=="10000 x 1.5M"))
library(RColorBrewer)
df1
df2
dfres
## contains columns
## c("n_am", "nQTL_am",
##  "n_amGPU", "nQTL_amGPU",
##  "n_mlmm", "nQTL_mlmm",
##  "n_glmnet", "nQTL_glmnet",
##  "n_bigRR",  "nQTL_bigRR",
##  "n_ranger",  "nQTL_ranger",
##  "n_lasso", "nQTL_lasso",
##   n_gemma, nQTL_gemma,
##   n_fast, nQTL_fast,
##   n_fastALL, nQTL_fastALL,
##  "nQTL_true")
## Note
## moved from smoothed power curves to lines based on mean. Smoothed curves weird.
require(ggplot2)
library(GGally)
library(ggthemes)
library(gridExtra)
library(RColorBrewer)
library(extrafont)
DIR <- paste(getwd(),"/", sep="")
DIR <- "/Users/geo047/Papers/AM-Paper/AM+/Plots_for_Paper/"
sizefn <- 16
thresh_indx <- 1:500
#thresh_indx <- 1:2
## vector initialisation
fam <- c("W", "S",  "L","HS","A","HL")
#fam <- NULL
#for(ii in c(700,800,900,1000))
#{
#  for(jj in c(5,50,500))
#  {
#    nme <- paste0("X",ii,"new",jj)
#    fam <- c(fam, nme)
#  }
#
#}
names.of.methods <- c("am", "mlmm","glmnet","lasso","r2VIM","bigRR", "gemma", "fastALL", "fast")
## list initialisation
FDR <- list()
recall <- list()  ## == power
dfres <- list()
##----------------------------------------
## Forming list with FDR and recall(power)
## results over families and threshold indexes
##------------------------------------------
cat(" Forming FDR and power(recall) results ... \n")
## looping over families
for(ff in fam){
FDR[[ff]] <- list()
recall[[ff]] <- list()
## looing over threshold indexes
for(indx in thresh_indx){
FDR[[ff]][[indx]] <- list()
recall[[ff]][[indx]] <- list()
## Load Data RData Objects
filename <- paste(DIR,"res",ff,"_",indx, ".RData", sep="")
load(filename)   #  # loads res_mat
for(ii in names.of.methods){
n_method <- paste("n_",ii, sep="")
nQTL_method <- paste("nQTL_",ii, sep="")
## ---- Set Power (recall) and FDR
tmp <-  1 - (mat[, eval(nQTL_method)]/
mat[, eval(n_method)])
tmp[is.nan(tmp)] <- 0
FDR[[ff]][[indx]][[ii]] <- mean(tmp, na.rm=TRUE)
# capturing case where there may not be any results
if(is.nan(FDR[[ff]][[indx]][[ii]]))
FDR[[ff]][[indx]][[ii]] <- NA
recall[[ff]][[indx]][[ii]] <- mean(mat[,eval(nQTL_method)]   / mat[, "nQTL_true"],
na.rm=TRUE)
if(is.nan(recall[[ff]][[indx]][[ii]]))
recall[[ff]][[indx]][[ii]] <- NA
}  ## end for ii
} ## end for  indx
} ## end for family
## form results structure
## method,  fam,  rep,  FDR
dfres <- data.frame()
## looping over families
for(ff in names(FDR))
{
cat(" Reading in family", ff, "\n")
## looping over threshold indexes
for(indx in thresh_indx)
{
## looping over methods
for(mm in names(FDR[[1]][[1]])){
df <- data.frame(method=mm, fam=ff, rep=1:length(FDR[[1]][[1]][[1]]),
FDR=FDR[[ff]][[indx]][[mm]] ,
recall = recall[[ff]][[indx]][[mm]] )
dfres <- rbind.data.frame(dfres , df)
} ## end for thresh_indx
}  ## end for mm
}  ## end for ff
##----------------------
## FDR gives NaN when
## no QTL found. Set to 0
##-------------------------
dfres$FDR[which(is.nan(dfres$FDR))] <- 0
dfres$recall[which(is.nan(dfres$recall))] <- 0
## change ordering of factor levels to change order of facet_wrap
dfres$method <- factor(dfres$method, levels=c("am", "mlmm",   "glmnet", "lasso",  "r2VIM",  "bigRR", "gemma",
"fastALL", "fast"))
levels(dfres$method) <- c("AMplus", "MLMM", "glmnet", "LMM-Lasso", "r2VIM", "bigRR", "GEMMA", "FaST-LMM^all",
"FaST-LMM^few")
levels(dfres$fam) <- c("150 x 5K", "350 x 500K", "1500 x 50K", "2000 x 500K",
"4000 x 1.5M", "10000 x 1.5M")
## change family labels to simulation labels
#  W  150 x 5 K           750
#  S  350 x 400K         140,000
#  L  1500 x 50K          75,000
#  HS 2000 x 500K         1,000,000
#  A  4000 x 1.5M       600,000,000
#  HL 10000 x 1.5M      1.5*e10
# "am"      "mlmm"    "glmnet"  "lasso"   "r2VIM"   "bigRR"   "gemma"   "fastALL" "fast"
##------------------------------------
## Draw plot for multi-locus methods
##-------------------------------------
## dropping MLMM recall values by a little bit because they are lower and so that we can see it in the plot
dfres[which(dfres$method=="MLMM"), "recall"] <-  dfres[which(dfres$method=="MLMM"), "recall"] * 0.95
df1 <- subset(subset(dfres, !(method=="AMplus" | method=="MLMM" | method=="GEMMA" | method=="FaST-LMM^few" | method=="FaST-LMM^all" )),
!(fam=="4000 x 1.5M" | fam=="10000 x 1.5M"))
df2 <- subset(subset(dfres, method=="AMplus" | method=="MLMM"),  !(fam=="4000 x 1.5M" | fam=="10000 x 1.5M"))
library(RColorBrewer)
df1
df2
table(df2$fam)
indx <- which(df2$fam=="1500 x 50k")
indx
levels(df2$fam)
indx <- which(df2$fam=="1500 x 50K")
indx
df2[indx,]
p1
names(df2)
unique(df2[indx,"FDR"])
df2[indx,"FDR"]
df2
df2[indx,]
xx <- df2[indx,]
unique(xx$FDR)
x1 <- which(xx$FDR==0.05240521)
x2 <- which(xx$FDR==0.02132501)
x3 <- which(xx$FDR==0.02203460)
x3
x2
x1
round(xx$FDR, 3)
y <- round(xx$FDR, 3)
x1 <- which(y==0.052)
x2 <- which(y==0.021)
x3 <- which(y==0.022)
x3
df2[indx,]
df2[x3,]
xx[x3,]
x1
x2
x3
head(df2)
df2
source('~/Papers/AM-Paper/AM+/Plots_for_Paper/power_plots.R')
fam
fam=HS
ff="HS"
FDR[[ff]] <- list()
recall[[ff]] <- list()
FDR
FDR <- list()
recall <- list()  ## == power
dfres <- list()
FDR[[ff]] <- list()
recall[[ff]] <- list()
FDR
thresh_indx
names.of.methods
for(indx in thresh_indx){
FDR[[ff]][[indx]] <- list()
recall[[ff]][[indx]] <- list()
## Load Data RData Objects
filename <- paste(DIR,"res",ff,"_",indx, ".RData", sep="")
load(filename)   #  # loads res_mat
for(ii in names.of.methods){
n_method <- paste("n_",ii, sep="")
nQTL_method <- paste("nQTL_",ii, sep="")
## ---- Set Power (recall) and FDR
tmp <-  1 - (mat[, eval(nQTL_method)]/
mat[, eval(n_method)])
tmp[is.nan(tmp)] <- 0
FDR[[ff]][[indx]][[ii]] <- mean(tmp, na.rm=TRUE)
# capturing case where there may not be any results
if(is.nan(FDR[[ff]][[indx]][[ii]]))
FDR[[ff]][[indx]][[ii]] <- NA
recall[[ff]][[indx]][[ii]] <- mean(mat[,eval(nQTL_method)]   / mat[, "nQTL_true"],
na.rm=TRUE)
if(is.nan(recall[[ff]][[indx]][[ii]]))
recall[[ff]][[indx]][[ii]] <- NA
}  ## end for ii
} ## end for  indx
FDR
unlist(FDR[[ff]])
FDR
names(FDR)
names(FDR[[ff]])
names(FDR[["HS"]])
class(FDR[["HS"]])
FDR[["HS"]][[1]]
FDR[["HS"]][[1]]$am
FDR[["HS"]][[1:500]]$am
FDR[["HS"]][1:500]$am
FDR[["HS"]][1:500]
FDR[["HS"]][[1:500]]
FDR[["HS"]][1:500]
FDR[["HS"]][1:500]$am
FDR[["HS"]][[1]]$am
FDR[["HS"]][[2]]$am
FDR[["HS"]][[500]]$am
fdr <- NULL
for(ii in 1:500{})
for(ii in 1:500){}
for(ii in 1:500){
fdr <- c(fdr , FDR[[ff]][[ii]]$am)
}
unique(fdr)
fdr
source('~/Papers/AM-Paper/AM+/Plots_for_Paper/power_plots.R')
p1
M <- matrix(data=sample(c(0,1,2), 100*1000, T),nrow=100)
dim(M)
y <- rnorm(100)
x <- M %*% y
y <- matrix(data=rnorm(100), nrow=100)
x <- M %*% y
x <- M %*% t(y)
dim(y)
dim(M)
y <- matrix(data=rnorm(1000), nrow=100)
y <- matrix(data=rnorm(1000), nrow=1000)
x <- M %*% t(y)
x <- M %*% y
dim(x)
dim(M)
source('~/Papers/AM-Paper/AM+/Plots_for_Paper/time_and_mem_plot_for_paper.R')
source('~/Papers/AM-Paper/AM+/Plots_for_Paper/time_and_mem_plot_for_paper.R')
source('~/Papers/AM-Paper/AM+/Plots_for_Paper/time_and_mem_plot_for_paper.R')
source('~/Papers/AM-Paper/AM+/Plots_for_Paper/time_and_mem_plot_for_paper.R')
p <- ggplot(df, aes(x=Pop, y=time, group=method,shape=method, colour=method)) +
geom_line(size=2) + geom_point(aes(colour=method),size=5) +
scale_shape_manual(breaks=c("am.", "gemma", "fastALL", "fast"),
labels=c("Eagle",
"GEMMA",
bquote('FaST-LMM'^all),
bquote('FaST-LMM'^few)),
values=c(rep(19,1),rep(17,3)))+
scale_colour_manual(breaks=c("am.", "gemma", "fastALL", "fast"),
labels=c("Eagle",
"GEMMA",
bquote('FaST-LMM'^all),
bquote('FaST-LMM'^few)),
values=brewer.pal(10, "Paired")[c(1,8,6,7)]) +
scale_size(guide = 'none') ## suppressed extra legend for size
p
df <- read.table(file="abscputimes.dat", header=TRUE)
head(df)
# remove column for am.GPU
indx <- which(colnames(df)=="am.GPU")
indx
source('~/Papers/AM-Paper/AM+/Plots_for_Paper/time_and_mem_plot_for_paper.R')
setwd("/Users/geo047/Papers/AM-Paper/AM+/Plots_for_Paper")
df <- read.table(file="memory.dat", header=TRUE)
sizefn <- 14
df<- melt(df)
df <- df[, -2]
names(df) <- c("Pop", "method","mem")
indx <- which(df$mem > 120)
df[indx, "mem"] <- 119
#levels(df$Pop)
# "A"  "HL" "HS" "L"  "S"  "W"
#
levels(df$Pop) <- c(4000*1500000, 10000*1500000, 2000*500000,350*400000, 1500*50000,150*5000  )
df$Pop <- as.numeric(as.character(df$Pop))
pps <- sort(unique(df$Pop))
df
## data frame for line segments
gsdf <- data.frame(x1=(pps), y1=rep(1,length(pps)),
x2 = (pps), y2=c(700,500,700,500,700,500))
p <- ggplot(df, aes(x=Pop, y=mem, group=method, shape=method, colour=method)) +
geom_line(size=2) + geom_point(aes(colour=method),size=5) +
scale_colour_manual(breaks=c("am.", "bigRR", "glmnet", "lasso", "mlmm", "r2VIM", "gemma", "fastALL", "fast"),
labels=c("Eagle","bigRR", "glmnet", "LMM-Lasso", "MLMM", "r2VIM", "GEMMA", bquote("FaST-LMM"^all),
bquote("FaST-LMM"^few)),
values=brewer.pal(9, "Paired")) +
scale_shape_manual(breaks=c("am.", "bigRR", "glmnet", "lasso", "mlmm", "r2VIM", "gemma", "fastALL", "fast"),
labels=c("AMplus","bigRR", "glmnet", "LMM-Lasso", "MLMM", "r2VIM", "GEMMA", bquote("FaST-LMM"^all),
bquote("FaST-LMM"^few)),
values = c(19,19,19,19,19,17,17,17,19)) +
scale_size(guide = 'none')  + scale_y_continuous(limits = c(0, 120))
p
p
ggplot(df, aes(x=Pop, y=mem, group=method, shape=method, colour=method)) +
geom_line(size=2) + geom_point(aes(colour=method),size=5)
levels(df$method)
ggplot(df, aes(x=Pop, y=mem, group=method, shape=method, colour=method)) +
geom_line(size=2) + geom_point(aes(colour=method),size=5) +
scale_shape_manual(values=1:nlevels(df$method))
df
p
ptime
p_time
